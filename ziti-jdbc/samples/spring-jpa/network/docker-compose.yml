version: '2.4'
services:
  postgres-db:
    image: postgres
    #ports:
    #  - 5432:5432
    networks:
      - zitiblue
    volumes:
     # Uncomment to save sql data between container restarts
     # - ./data/db:/var/lib/postgresql/data
      - ./postgres-bootstrap.sh:/docker-entrypoint-initdb.d/postgres-bootstrap.sh
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  example-network-init-container:
    image: "${ZITI_IMAGE}:${ZITI_VERSION}"
    depends_on:
      - ziti-database-router
    environment:
      - ZITI_CONTROLLER_RAWNAME="${ZITI_CONTROLLER_RAWNAME}"
      - ZITI_EDGE_CONTROLLER_RAWNAME="${ZITI_EDGE_CONTROLLER_RAWNAME}"
    env_file:
      - ./.env
    networks:
      zitiblue:
        aliases:
          - ziti-edge-controller-init-container
      zitired:
        aliases:
          - ziti-edge-controller-init-container
    volumes:
      - ziti-fs:/openziti
      - .:/openziti/network-setup
    entrypoint: 
      - "/openziti/scripts/run-with-ziti-cli.sh"
    command: 
      - "/openziti/network-setup/network-setup.sh"

  ziti-database-router:
    image: "${ZITI_IMAGE}:${ZITI_VERSION}"
    depends_on:
      - ziti-controller
    environment:
      - ZITI_CONTROLLER_RAWNAME="${ZITI_CONTROLLER_RAWNAME}"
      - ZITI_EDGE_CONTROLLER_RAWNAME="${ZITI_EDGE_CONTROLLER_RAWNAME}"
      - ZITI_EDGE_ROUTER_RAWNAME=ziti-database-router
      - ZITI_EDGE_ROUTER_ROLES=databases
    #ports:
    #  - "3022:3022"
    networks:
      - zitiblue
      - zitired
    volumes:
      - ziti-fs:/openziti
    entrypoint: /bin/bash
    command: "/openziti/scripts/run-router.sh edge"

#  ziti-tunneler:
#    image: 'netfoundry/ziti-tunnel:todtest'
#    depends_on:
#      - ziti-edge-router
#    networks:
#      - zitiblue
#    volumes:
#      - .:/netfoundry
#    environment:
#      - NF_REG_NAME=database
#      - NF_REG_WAIT=240
#    command:
#      - host

volumes:
  postgres-fs:
