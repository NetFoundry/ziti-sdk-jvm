/*
 * Copyright (c) 2018-2020 NetFoundry, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
    dependencies {
        classpath 'com.kezong:fat-aar:1.2.15'
    }
}

plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'com.jfrog.bintray'
    id 'org.jetbrains.dokka'
}

apply plugin: 'com.kezong.fat-aar'


android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 29
        versionCode 1
        versionName "${project.version}"

        buildConfigField "String", "GIT_COMMIT", "\"${semver.info.shortCommit}\""
        buildConfigField "String", "GIT_BRANCH", "\"${semver.info.branch.id}\""

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    compileOptions {
        targetCompatibility = "8"
        sourceCompatibility = "8"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }
}


repositories {
    jcenter()
    google()
    maven { // needed to lazysodium-android
        url = "https://netfoundry.jfrog.io/netfoundry/ziti-maven"
    }
}

dependencies {
    api(project(':ziti')){
        exclude module:"lazysodium-java"
        exclude module:"jna"
    }
    embed("com.goterl.lazycode:lazysodium-android:4.1.1@aar")
    embed('net.java.dev.jna:jna:5.6.0@aar')

    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.4.10"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.8'

    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:support-compat:28.0.0'
    implementation 'com.android.support:localbroadcastmanager:28.0.0'
}


task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

dokka {
    outputFormat = 'html'
    configuration {
        jdkVersion = 8
    }
}

tasks.create('dokkaJar', Jar) {
    dependsOn dokka
    classifier('javadoc')
    from dokka.outputDirectory
}

afterEvaluate {
    publishing {
        publications {
            zitiAndroid(MavenPublication) {
                groupId = project.group
                version = project.version
                from components.release
                artifact sourceJar
                artifact dokkaJar
            }
        }
    }
}

bintray {
    user = System.getProperty('bintray.user')
    key = System.getProperty('bintray.key')
    publications = ['zitiAndroid']
    publish = true

    pkg {
        userOrg = parent.bintrayOrg
        repo = parent.bintrayRepo
        name = 'ziti'
        licenses = ['Apache-2.0']
        websiteUrl = 'https://github.com/openziti/ziti-sdk-jvm/'
        issueTrackerUrl = 'https://github.com/openziti/ziti-sdk-jvm/issues'
        vcsUrl = 'https://github.com/openziti/ziti-sdk-jvm.git'
        version {
            name = project.version
            desc = project.version
            released = new Date()
        }
    }
}

