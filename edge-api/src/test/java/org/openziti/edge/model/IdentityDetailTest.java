/*
 * Ziti Edge Client
 * OpenZiti Edge Client API
 *
 * The version of the OpenAPI document: 0.26.18
 * Contact: help@openziti.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openziti.edge.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import org.openziti.edge.model.EntityRef;
import org.openziti.edge.model.EnvInfo;
import org.openziti.edge.model.IdentityAuthenticators;
import org.openziti.edge.model.IdentityEnrollments;
import org.openziti.edge.model.Link;
import org.openziti.edge.model.SdkInfo;
import org.openziti.edge.model.Tags;
import org.openziti.edge.model.TerminatorPrecedence;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for IdentityDetail
 */
class IdentityDetailTest {
    private final IdentityDetail model = new IdentityDetail();

    /**
     * Model tests for IdentityDetail
     */
    @Test
    void testIdentityDetail() {
        // TODO: test IdentityDetail
    }

    /**
     * Test the property 'links'
     */
    @Test
    void linksTest() {
        // TODO: test links
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'id'
     */
    @Test
    void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'tags'
     */
    @Test
    void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    void updatedAtTest() {
        // TODO: test updatedAt
    }

    /**
     * Test the property 'appData'
     */
    @Test
    void appDataTest() {
        // TODO: test appData
    }

    /**
     * Test the property 'authPolicy'
     */
    @Test
    void authPolicyTest() {
        // TODO: test authPolicy
    }

    /**
     * Test the property 'authPolicyId'
     */
    @Test
    void authPolicyIdTest() {
        // TODO: test authPolicyId
    }

    /**
     * Test the property 'authenticators'
     */
    @Test
    void authenticatorsTest() {
        // TODO: test authenticators
    }

    /**
     * Test the property 'defaultHostingCost'
     */
    @Test
    void defaultHostingCostTest() {
        // TODO: test defaultHostingCost
    }

    /**
     * Test the property 'defaultHostingPrecedence'
     */
    @Test
    void defaultHostingPrecedenceTest() {
        // TODO: test defaultHostingPrecedence
    }

    /**
     * Test the property 'disabled'
     */
    @Test
    void disabledTest() {
        // TODO: test disabled
    }

    /**
     * Test the property 'disabledAt'
     */
    @Test
    void disabledAtTest() {
        // TODO: test disabledAt
    }

    /**
     * Test the property 'disabledUntil'
     */
    @Test
    void disabledUntilTest() {
        // TODO: test disabledUntil
    }

    /**
     * Test the property 'enrollment'
     */
    @Test
    void enrollmentTest() {
        // TODO: test enrollment
    }

    /**
     * Test the property 'envInfo'
     */
    @Test
    void envInfoTest() {
        // TODO: test envInfo
    }

    /**
     * Test the property 'externalId'
     */
    @Test
    void externalIdTest() {
        // TODO: test externalId
    }

    /**
     * Test the property 'hasApiSession'
     */
    @Test
    void hasApiSessionTest() {
        // TODO: test hasApiSession
    }

    /**
     * Test the property 'hasEdgeRouterConnection'
     */
    @Test
    void hasEdgeRouterConnectionTest() {
        // TODO: test hasEdgeRouterConnection
    }

    /**
     * Test the property 'isAdmin'
     */
    @Test
    void isAdminTest() {
        // TODO: test isAdmin
    }

    /**
     * Test the property 'isDefaultAdmin'
     */
    @Test
    void isDefaultAdminTest() {
        // TODO: test isDefaultAdmin
    }

    /**
     * Test the property 'isMfaEnabled'
     */
    @Test
    void isMfaEnabledTest() {
        // TODO: test isMfaEnabled
    }

    /**
     * Test the property 'name'
     */
    @Test
    void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'roleAttributes'
     */
    @Test
    void roleAttributesTest() {
        // TODO: test roleAttributes
    }

    /**
     * Test the property 'sdkInfo'
     */
    @Test
    void sdkInfoTest() {
        // TODO: test sdkInfo
    }

    /**
     * Test the property 'serviceHostingCosts'
     */
    @Test
    void serviceHostingCostsTest() {
        // TODO: test serviceHostingCosts
    }

    /**
     * Test the property 'serviceHostingPrecedences'
     */
    @Test
    void serviceHostingPrecedencesTest() {
        // TODO: test serviceHostingPrecedences
    }

    /**
     * Test the property 'type'
     */
    @Test
    void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'typeId'
     */
    @Test
    void typeIdTest() {
        // TODO: test typeId
    }

}
