/*
 * Copyright (c) 2018-2020 NetFoundry, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id("java-library")
    id("application")
    id("org.jetbrains.kotlin.jvm")
    id("com.jfrog.bintray")
}

dependencies {
    implementation("org.jetbrains.kotlin:kotlin-stdlib:1.3.72")
    implementation('org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.7')

    implementation("org.slf4j:slf4j-api:1.7.30")

    implementation('com.squareup.retrofit2:retrofit:2.8.2')
    implementation('com.squareup.retrofit2:converter-gson:2.8.2')
    implementation("com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2")

    implementation('io.jsonwebtoken:jjwt-api:0.11.1')
    implementation('io.jsonwebtoken:jjwt-impl:0.11.1')
    implementation('io.jsonwebtoken:jjwt-orgjson:0.11.1')

    implementation('org.bouncycastle:bcpkix-jdk15on:1.65')

    implementation("com.goterl.lazycode:lazysodium-java:4.2.6") {
        exclude module: 'slf4j-api'
    }

    implementation('com.github.ajalt:clikt:2.7.0')

    testImplementation("org.jetbrains.kotlin:kotlin-test-junit:1.3.72")
}

application {
    mainClassName = "io.netfoundry.ziti.identity.Enroller"
    applicationName = "ziti-enroller"
}

compileJava {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

tasks {
    def generatedResourcesDir = "${buildDir}/generated-resources/main"

    task versionProps(type: WriteProperties) {
        outputFile = "${generatedResourcesDir}/io/netfoundry/ziti/util/ziti-version.properties"

        property("version", "${project.version}")
        property("revision", gitCommit)
        property("branch", gitBranch)
    }

    sourceSets.main {
        resources.srcDir(files(generatedResourcesDir).builtBy(versionProps))
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.java.srcDirs
    from sourceSets.main.kotlin.srcDirs
    classifier "sources"
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier('javadoc')
    from javadoc.destinationDir
}

artifacts {
    archives(sourcesJar)
    archives(javadocJar)
}

publishing {
    publications {
        zitiJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

bintray {
    user = System.getProperty('bintray.user')
    key = System.getProperty('bintray.key')
    publications = ['zitiJava']

    pkg {
        userOrg = 'openziti'
        repo = 'maven'
        name = 'ziti'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/netfoundry/ziti-sdk-jvm.git'
        version {
            name = project.version
            desc = project.version
            released = new Date()
        }
    }
}